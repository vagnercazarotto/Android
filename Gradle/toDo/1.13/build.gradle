/*

Gradle allows you to parametrize your build by adding properties to the
project object from outside your build script. There are two main ways to do
this: a gradle.properties file, and command line arguments.

*/



task printGreeting << {
	println greeting 
}




/* 

We need to pass in the value of the greeting we want to use. Let's
first do this using a gradle.properties file. We'll create that file, and add
the line:

    greeting = "Hello from a properties file"

Now if we run `printGreeting` again, we get the output we expect. The other
way to set properties is on the command line. Let's run

    gradle -Pgreeting="Hello from the command line" pG

Note that the `greeting` property is now defined in two places, the
gradle.properties file, and from the command line. The command line value
overrides the value in the properties file.

There's a third way to use Gradle properties, and that's from inside the build
script. We can pass a closure to project.ext (for "extra properties") to
define properties with the same syntax as in the gradle.properties file. Note
that properties defined this way shadow all other definitions.

*/




ext {
    greeting = "Hello from inside the build script"
}