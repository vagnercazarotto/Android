/*

In these exercises we'll explore the Groovy features most relevant to Gradle
build scripts. Each topic will be contained in the action of a Gradle task, so
to test run your code you'll need to run that particular task. If you get
stuck, check out the solution.gradle file in this directory.

*/
task abc << {}
task stringsAndTypes << {
    // TODO: Run `$ gradle sAT`
    println "Nice work abbreviating the task name"


    // TODO: Create a variable named foo and assign it the value 4.2
    def foo = 4.2

    // TODO: Print the value and class of foo
    println "Value $foo and ${foo.class}"

    // TODO: Use string interpolation to print the square root of 127
    // HINT: http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html
    println "The value of a square of 127 is: ${Math.sqrt(127)}"

    // TODO: Assign the current date to foo and print it, along with its type
    // HINT:
    // http://docs.oracle.com/javase/7/docs/api/java/util/package-summary.html
    foo = new java.util.Date()
    println "Value $foo and ${foo.class}"

    // TODO: Use the `substring` method to extract my name from this string
    def hello = "Hello, Jeremy.";
    def getName = hello.substring(7,13)
    println "The value of getName is: $getName"

    // TODO: Use `toUpperCase` to capitalize and print my name
    println getName.toUpperCase()
}

task closures << {
    // TODO: Declare a closure that takes two arguments and adds them together
    // HINT: http://www.groovy-lang.org/closures.html
    def adds = { x ,y -> x+y}
    // TODO: Call your closure with arguments 17 and 25, and print the result
    // Beware that something like `println addTwo 17, 25` is ambiguous
    println adds(3,5)
}

task lists << {
    // TODO: Declare a list containing 5 of your favorite candies
    // HINT: Try searching for "groovy list literal"
    def listOfCandies = ["chocolate","iceCream","moreIceCream","candyBar","hotChocolate"]
    // TODO: Create a new list of your candies in all caps
    // HINT: http://mrhaki.blogspot.ca/2010/05/groovy-goodness-use-collect-with.html
    def upCaseList = listOfCandies.collect{it.toUpperCase()}

    // TODO: Print each capital candyle
    upCaseList.each{println it}

}


task foobar << {
    def foo = "bar"
    println "$foo + foo equals ${foo + 'foo'}"
}